{"ast":null,"code":"var _jsxFileName = \"/Users/lamnguyen/Desktop/orm-demo/frontend/src/components/ViewEmployees.js\";\nimport './css/ViewEmployees.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddNewEmployee() {\n  //Get text from user\n  const text = document.getElementsByClassName('newEmployeeTextEntry')[0].value; //Error handling\n\n  if (text === \"\") {\n    return;\n  } //Make a JSON Object\n\n\n  const firstName = text.substring(0, text.indexOf(\" \"));\n  const lastName = text.substring(text.indexOf(\" \") + 1);\n  const rawJSON = {\n    \"id\": firstName + \"_\" + lastName + \"_\" + firstName + lastName + \"@gmail.com\",\n    \"firstName\": firstName,\n    \"lastName\": lastName,\n    \"email\": firstName + lastName + \"@gmail.com\",\n    \"age\": 20,\n    \"enrolled\": true\n  }; //Make a post request\n\n  fetch('http://localhost:3000/api/name', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(rawJSON)\n  }).then(() => {\n    console.log(\"new name added\");\n  });\n}\n\n_c = AddNewEmployee;\n\nfunction RemoveEmployee() {\n  //Get text from user\n  const text = document.getElementsByClassName('removeEmployeeTextEntry')[0].value; //Error handling\n\n  if (text === \"\") {\n    return;\n  } //Make a JSON Object\n\n\n  const firstName = text.substring(0, text.indexOf(\" \"));\n  const lastName = text.substring(text.indexOf(\" \") + 1);\n  const id = firstName + \"_\" + lastName + \"_\" + firstName + lastName + \"@gmail.com\"; //Make a delete request\n\n  fetch(`http://localhost:3000/api/name/${id}`, {\n    method: 'DELETE',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(() => {\n    console.log(\"Deleted entry\");\n  });\n}\n\n_c2 = RemoveEmployee;\n\nasync function RetrieveEmployees() {\n  //Get the response\n  console.log(\"Retrieving Data...\");\n  const resp = await fetch('http://localhost:3000/api/name');\n  const body = await resp.json(); //Error handling \n\n  if (resp.status !== 200) {\n    throw Error(body.message);\n  } //Return data\n\n\n  return body;\n}\n\n_c3 = RetrieveEmployees;\n\nclass ViewEmployee extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      response: '',\n      showNewEmployeePage: false\n    };\n  }\n\n  componentDidMount() {\n    RetrieveEmployees().then(res => {\n      this.setState({\n        response: res,\n        showNewEmployeePage: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      response\n    } = this.state;\n    var employeeNames = []; //Add emplooyees to a an array\n\n    for (var index in response) {\n      employeeNames.push(response[index][\"first_name\"] + \" \" + response[index][\"last_name\"]);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"header\",\n          children: \" Current Employees \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editEmployeeContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"newEmployeeTextEntry\",\n          placeholder: \"Enter name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"createButton\",\n          onClick: AddNewEmployee,\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"removeEmployeeTextEntry\",\n          placeholder: \"Enter name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"removeButton\",\n          onClick: RemoveEmployee,\n          children: \"Remove Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'black',\n          fontSize: 25,\n          paddingLeft: 20\n        },\n        children: \" Names: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", employeeNames.toString(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default ViewEmployee;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AddNewEmployee\");\n$RefreshReg$(_c2, \"RemoveEmployee\");\n$RefreshReg$(_c3, \"RetrieveEmployees\");","map":{"version":3,"sources":["/Users/lamnguyen/Desktop/orm-demo/frontend/src/components/ViewEmployees.js"],"names":["React","AddNewEmployee","text","document","getElementsByClassName","value","firstName","substring","indexOf","lastName","rawJSON","fetch","method","headers","body","JSON","stringify","then","console","log","RemoveEmployee","id","RetrieveEmployees","resp","json","status","Error","message","ViewEmployee","Component","state","response","showNewEmployeePage","componentDidMount","res","setState","render","employeeNames","index","push","color","fontSize","paddingLeft","toString"],"mappings":"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","sourcesContent":["import './css/ViewEmployees.css';\nimport React from 'react';\n\nfunction AddNewEmployee() {\n    //Get text from user\n    const text = document.getElementsByClassName('newEmployeeTextEntry')[0].value\n    \n    //Error handling\n    if(text === \"\"){ return; }\n\n    //Make a JSON Object\n    const firstName = text.substring(0, text.indexOf(\" \"));\n    const lastName = text.substring(text.indexOf(\" \") + 1);\n\n    const rawJSON = {\n        \"id\": firstName + \"_\" + lastName + \"_\" + firstName + lastName + \"@gmail.com\",\n        \"firstName\": firstName,\n        \"lastName\": lastName,\n        \"email\": firstName + lastName + \"@gmail.com\",\n        \"age\": 20,\n        \"enrolled\": true\n    }\n\n    //Make a post request\n    fetch('http://localhost:3000/api/name', {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\"},\n        body: JSON.stringify(rawJSON)\n    }).then(() => {\n        console.log(\"new name added\")\n    })\n}\n\nfunction RemoveEmployee(){\n    //Get text from user\n    const text = document.getElementsByClassName('removeEmployeeTextEntry')[0].value\n\n    //Error handling\n    if(text === \"\"){ \n        return; \n    }\n\n    //Make a JSON Object\n    const firstName = text.substring(0, text.indexOf(\" \"));\n    const lastName = text.substring(text.indexOf(\" \") + 1);\n    const id = firstName + \"_\" + lastName + \"_\" + firstName + lastName + \"@gmail.com\";\n\n    //Make a delete request\n    fetch(`http://localhost:3000/api/name/${id}`, {\n        method: 'DELETE',\n        headers: { \"Content-Type\": \"application/json\"}\n    }).then(() => {\n        console.log(\"Deleted entry\");\n    })\n}\n\nasync function RetrieveEmployees(){\n    //Get the response\n    console.log(\"Retrieving Data...\")\n    const resp = await fetch('http://localhost:3000/api/name');\n    const body = await resp.json();\n\n    //Error handling \n    if(resp.status !== 200){\n        throw Error(body.message);\n    }\n\n    //Return data\n    return body;\n}\n\nclass ViewEmployee extends React.Component {\n\n    state = {response: '', showNewEmployeePage: false }\n\n    componentDidMount(){\n        RetrieveEmployees().then(res => {\n            this.setState({ response: res , showNewEmployeePage: false });\n        })\n    }\n    \n    render() {\n        const { response } = (this.state);\n        var employeeNames = []\n\n        //Add emplooyees to a an array\n        for(var index in response){\n            employeeNames.push(response[index][\"first_name\"] + \" \" +  response[index][\"last_name\"])\n        }\n        \n        return (<div className=\"container\">\n            <div className='child'>\n                <header className='header'> Current Employees </header>\n            </div>\n\n            <div className='editEmployeeContainer'>\n                <input className='newEmployeeTextEntry' placeholder='Enter name:'></input>\n\n                <button className='createButton' onClick={AddNewEmployee}>\n                    Add New Employee\n                </button>\n\n                <input className='removeEmployeeTextEntry' placeholder='Enter name:'></input>\n\n                <button className='removeButton' onClick={RemoveEmployee}>\n                    Remove Employee\n                </button>\n            </div>\n\n\n            <p style={{color: 'black', fontSize: 25, paddingLeft: 20}}> Names: </p>\n            <p> {employeeNames.toString()} </p>\n\n        </div>);\n    }\n}\n\nexport default ViewEmployee;"]},"metadata":{},"sourceType":"module"}