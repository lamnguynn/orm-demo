[{"/Users/lamnguyen/Desktop/orm-demo/frontend/src/index.js":"1","/Users/lamnguyen/Desktop/orm-demo/frontend/src/reportWebVitals.js":"2","/Users/lamnguyen/Desktop/orm-demo/frontend/src/App.js":"3","/Users/lamnguyen/Desktop/orm-demo/frontend/src/components/ViewEmployees.js":"4"},{"size":500,"mtime":1642210292051,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1642210292052,"results":"7","hashOfConfig":"6"},{"size":193,"mtime":1642210898120,"results":"8","hashOfConfig":"6"},{"size":3350,"mtime":1642213454501,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1bp49ds",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/lamnguyen/Desktop/orm-demo/frontend/src/index.js",[],["20","21"],"/Users/lamnguyen/Desktop/orm-demo/frontend/src/reportWebVitals.js",[],"/Users/lamnguyen/Desktop/orm-demo/frontend/src/App.js",[],"/Users/lamnguyen/Desktop/orm-demo/frontend/src/components/ViewEmployees.js",["22","23","24"],"import './css/ViewEmployees.css';\nimport React, {Component} from 'react';\n\nfunction AddNewEmployee() {\n    //Get text from user\n    const text = document.getElementsByClassName('newEmployeeTextEntry')[0].value\n    \n    //Error handling\n    if(text == \"\"){ return; }\n\n    //Make a JSON Object\n    const firstName = text.substring(0, text.indexOf(\" \"));\n    const lastName = text.substring(text.indexOf(\" \") + 1);\n\n    const rawJSON = {\n        \"id\": firstName + \"_\" + lastName + \"_\" + firstName + lastName + \"@gmail.com\",\n        \"firstName\": firstName,\n        \"lastName\": lastName,\n        \"email\": firstName + lastName + \"@gmail.com\",\n        \"age\": 20,\n        \"enrolled\": true\n    }\n\n    //Make a post request\n    fetch('http://localhost:3000/api/name', {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\"},\n        body: JSON.stringify(rawJSON)\n    }).then(() => {\n        console.log(\"new name added\")\n    })\n}\n\nfunction RemoveEmployee(){\n    //Get text from user\n    const text = document.getElementsByClassName('removeEmployeeTextEntry')[0].value\n\n    //Error handling\n    if(text == \"\"){ \n        return; \n    }\n\n    //Make a JSON Object\n    const firstName = text.substring(0, text.indexOf(\" \"));\n    const lastName = text.substring(text.indexOf(\" \") + 1);\n    const id = firstName + \"_\" + lastName + \"_\" + firstName + lastName + \"@gmail.com\";\n\n    //Make a delete request\n    fetch(`http://localhost:3000/api/name/${id}`, {\n        method: 'DELETE',\n        headers: { \"Content-Type\": \"application/json\"}\n    }).then(() => {\n        console.log(\"Deleted entry\");\n    })\n}\n\nasync function RetrieveEmployees(){\n    //Get the response\n    console.log(\"Retrieving Data...\")\n    const resp = await fetch('/api/name/');\n    const body = await resp.json();\n\n    //Error handling \n    if(resp.status !== 200){\n        throw Error(body.message);\n    }\n\n    //Return data\n    return body;\n}\n\nclass ViewEmployee extends React.Component {\n\n    state = {response: '', showNewEmployeePage: false }\n\n    componentDidMount(){\n        RetrieveEmployees().then(res => {\n            this.setState({ response: res , showNewEmployeePage: false });\n        })\n    }\n    \n    render() {\n        const { response } = (this.state);\n        var employeeNames = []\n\n        //Add emplooyees to a an array\n        for(var index in response){\n            employeeNames.push(response[index][\"first_name\"] + \" \" +  response[index][\"last_name\"])\n        }\n        \n        return (<div className=\"container\">\n            <div className='child'>\n                <header className='header'> Current Employees </header>\n            </div>\n\n            <div className='editEmployeeContainer'>\n                <input className='newEmployeeTextEntry' placeholder='Enter name:'></input>\n\n                <button className='createButton' onClick={AddNewEmployee}>\n                    Add New Employee\n                </button>\n\n                <input className='removeEmployeeTextEntry' placeholder='Enter name:'></input>\n\n                <button className='removeButton' onClick={RemoveEmployee}>\n                    Remove Employee\n                </button>\n            </div>\n\n\n            <p style={{color: 'black', fontSize: 25}}> Names: </p>\n            <p> {employeeNames.toString()} </p>\n\n        </div>);\n    }\n}\n\nexport default ViewEmployee;",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":2,"column":16,"nodeType":"31","messageId":"32","endLine":2,"endColumn":25},{"ruleId":"33","severity":1,"message":"34","line":9,"column":13,"nodeType":"35","messageId":"36","endLine":9,"endColumn":15},{"ruleId":"33","severity":1,"message":"34","line":39,"column":13,"nodeType":"35","messageId":"36","endLine":39,"endColumn":15},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]